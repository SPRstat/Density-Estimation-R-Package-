"0","rm(list = ls())"
"0",""
"0","###SEGMENT 1 : CALLING LIBRARIES"
"0","library(""parallel"")"
"0","library(""mcreplicate"")#needed for parallel computing"
"0","library(""prettydoc"")"
"0","library(""lattice"")"
"0","### SEGMENT 2: DEFINITION OF FUNCTIONS"
"0","beta_density=Vectorize(function(a,vec,isplot=FALSE,addplot=FALSE,col_plot=1)"
"0","{"
"0","  n=length(vec)"
"0","  y=(vec-min(vec))/(max(vec)-min(vec))"
"0","  mean_y=mean(y)"
"0","  var_y=var(y)*((n-1)/n)"
"0","  const=(((mean_y*(1-mean_y))/var_y)-1)"
"0","  alpha_hat=const*mean_y"
"0","  beta_hat= const*(1-mean_y)"
"0","  den_beta_est1=function(u) dbeta((u-min(vec))/(max(vec)-min(vec)),alpha_hat,beta_hat)/(max(vec)-min(vec))"
"0","  if(isplot==TRUE)curve(den_beta_est1,-3,3,add = addplot,col=col_plot)"
"0","  else(return(den_beta_est1(a)))"
"0","},vectorize.args = ""a"")"
"0","######################"
"0",""
"0","histogram_density=Vectorize(function(x,v,x0=0,h=.1)"
"0","{"
"0","  i=(x-x0)%/%h"
"0","  sum(v>=(x0+i*h) & v<=(x0+(i+1)*h))/(h*length(v))"
"0","},vectorize.args = ""x"")"
"0",""
"0",""
"0",""
"0","ash_density = Vectorize(function(x,v,org=0,h0=.1,N = 9)"
"0","{ "
"0","  "
"0","  s = 0   "
"0","  for (i in seq(-(h0/2)+org,(h0/2)+org,length.out=N))"
"0","    {"
"0","    print(""Working"")"
"0","    s = s+ histogram_density(x,v,x0=i,h =h0)"
"0","    }"
"0","  s/N"
"0","},vectorize.args = ""x"")"
"0",""
"0",""
"0",""
"0","fg=function(){slag<<-slag+1;slag}"
"0","ash_density_ = Vectorize(function(x,v,org=0,h0=.1,N = 9)"
"0","{ "
"0","  a=Vectorize(function(u) histogram_density(x,v,u,h0))"
"0","  mean(a(seq(-(h0/2)+org,(h0/2)+org,length.out=N)))"
"0","},vectorize.args = ""x"")"
"0",""
"0","######Ash density integral"
"0","ash_density_int=Vectorize(function(x,v,h=.1)"
"0","{"
"0","  a=Vectorize(function(u) histogram_density(x,v,u,h))"
"0","  (integrate(a,-h/2,h/2,subdivisions = 1000)$value)/h"
"0","},vectorize.args=""x"")"
"0",""
"0","#Some kernel functions"
"0",""
"0","#Naive Kernel"
"0","naive_kern=Vectorize(function(x)"
"0","{"
"0","  if (x>=-1 & x<=1) .5"
"0","  else 0"
"0","})"
"0",""
"0","#Optimal Kernel"
"0","opt_kern=Vectorize(function(x)"
"0","{"
"0","  if (x>=-sqrt(5) & x<=sqrt(5)) (3/(4*sqrt(5)))*(1-(x^2)/5)"
"0","  else 0"
"0","})"
"0",""
"0","#Triangular Kernel"
"0","triangular_kern=Vectorize(function(x)"
"0","{"
"0","  if (x>=-1 & x<=0) x+1"
"0","  else if (x>=0 & x<=1) 1-x"
"0","  else 0"
"0","})"
"0","####shifted exponential kernel"
"0","shiftedexpo_kern=Vectorize(function(x)"
"0","  {"
"0","  dexp(x+1)"
"0","})"
"0","##### cosine kernel"
"0","cosine_kern=Vectorize(function(x)"
"0","{"
"0","  if (x>=-1 & x<=1) ((pi/4)*cos((pi/2)*x))"
"0","  else 0"
"0","})"
"0",""
"0","###### new_kernal"
"0","new_kern=Vectorize(function(x)"
"0","{"
"0","  if (x>=-1 & x<=1) (1/8)*(5-3*(x^2))"
"0","  else 0"
"0","})"
"0","######################"
"0",""
"0","kern_density=Vectorize(function(x,v,h=.1,func=dnorm,...)"
"0","{"
"0","  sum(func((x-v)/h,...))/(length(v)*h)"
"0","},vectorize.args = ""x"")"
"0",""
"0","ref_density=Vectorize(function(x,v,h=.1,func=dnorm,bound=0,...)"
"0","{"
"0","  ifelse(x>bound,2*sum(func((x-v)/h,...))/(length(v)*h),0)"
"0","},vectorize.args = ""x"")"
"0",""
"0",""
"0","#Finding theoretical Mean Integrated square error"
"0","MISE=function(expr=NULL,dens=dnorm,kern=dnorm,...,l1=-Inf,u1=Inf,l2=-Inf,u2=Inf,n=1000)"
"0","{"
"0","  a=ifelse(!is.null(expr),expr,as.expression(substitute(dens(x))))"
"0","  L=integrate(function(x){(kern(x,...))^2},l2,u2)$value"
"0","  M=integrate(function(x){(eval(D(D(a, ""x""),""x"")))^2},l1,u1)$value"
"0","  Q=integrate(function(x){(eval(a))^2},l1,u1)$value"
"0","  g=integrate(function(x){x^2*(kern(x))},l2,u2)$value"
"0","  h= g^(-2/5)*L^(1/5)*M^(-1/5)*n^(-1/5)"
"0","  c=g^(2/5)*L^(4/5)"
"0","  mse=(5/4)*c*M^(1/5)*n^(-4/5)"
"0","  eff=(3/(5*sqrt(5)))*g^(-1/2)*L^(-1)"
"0","  return(list(mise_opt=mse,efficiency=eff,h_opt=h,L_kern=L,gamma_kern=g,M_dens=M,Q_dens=Q))"
"0","}"
"0",""
"0","MISE_pos=function(expr=NULL,dens=dnorm,kern=dexp,...,l1=0,u1=Inf,l2=0,u2=Inf,n=1000)"
"0","{"
"0","  a=ifelse(!is.null(expr),expr,as.expression(substitute(dens(x))))"
"0","  L=integrate(function(x){(kern(x,...))^2},l2,u2)$value"
"0","  M1=integrate(function(x){(eval(D(a,""x"")))^2},l1,u1)$value"
"0","  Q=integrate(function(x){(eval(a))^2},l1,u1)$value"
"0","  g1=integrate(function(x){x*(kern(x))},l2,u2)$value"
"0","  h= g1^(-2/3)*L^(1/3)*M1^(-1/3)*n^(-1/3)"
"0","  c=g1^(2/3)*L^(2/3)"
"0","  mse=2*c*M1^(1/3)*n^(-1/3)"
"0","  return(list(mise_opt=mse,h_opt=h,L_kern=L,gamma_kern=g1,M_dens=M1,Q_dens=Q))"
"0","}"
"0",""
"0","MISE_bias_red=function(expr=NULL,dens=dnorm,kern=new_kern,...,l1=-Inf,u1=Inf,l2=-Inf,u2=Inf,n=1000)"
"0","{"
"0","  a=ifelse(!is.null(expr),expr,as.expression(substitute(dens(x))))"
"0","  L=integrate(function(x){(kern(x,...))^2},l2,u2)$value"
"0","  M2=integrate(function(x){(eval(D(D(D(D(a, ""x""),""x""),""x""),""x"")))^2},l1,u1)$value"
"0","  g2=integrate(function(x){(x^4)*(kern(x))},l2,u2)$value"
"0","  h= g2^(-2/9)*L^(1/9)*M2^(-1/9)*n^(-1/9)"
"0","  c=g2^(2/9)*L^(8/9)"
"0","  mse=(577/576)*c*M2^(1/9)*n^(-8/9)"
"0","  return(list(mise_opt=mse,h_opt=h,L_kern=L,gamma_kern=g2,M_dens=M2))"
"0","}"
"0",""
"0","#### normal,triangular,naive,logistic,laplace"
"0","#### normal,cauchy,logistic,laplace,exponential,weibull, pareto, some bimodal contaminated distributions"
"0",""
"0","#######varying naive kernel"
"0",""
"0",""
"0",""
"0",""
"0","######################"
"0","#Using Monte-Carlo Simulation"
"0","et = function(func1 = rnorm,func2=dnorm,Func = beta_density,l1 = -Inf,u1 = Inf,...) "
"0","{ "
"0","  v = func1(1000)"
"0","  integrate(function(x){(Func(x,v,...)-func2(x))^2},lower = l1,upper = u1,subdivisions = 10000)$value"
"0","}"
"0",""
"0",""
"0","##Functions to calculate the standard error estimate for corresponding methods"
"0","a_kd_logis_norm=Vectorize(function(h0){mean(mc_replicate(1000,et(rlogis,dlogis,kern_density,h=h0),detectCores()))},vectorize.args = ""h0"")"
"0","a_hist = Vectorize(function(h0,f1,f2){mean(mc_replicate(1000,et(f1,f2,histogram_density,h=h0),detectCores(),varlist = c('et','histogram_density')))},vectorize.args = ""h0"")"
"0","a_ash.1= Vectorize(function(h0,f1,f2){mean(et(f1,f2,ash_density_,h=h0,l1=-4,l2=4))},vectorize.args = ""h0"")"
"0",""
"0","a_ash = Vectorize(function(h0,f1,f2){mean(mc_replicate(100,et(f1,f2,ash_density,h=h0),detectCores(),varlist = c('et','ash_density','histogram_density','vec')))},vectorize.args = ""h0"")"
"0","a_ash_i = Vectorize(function(h0,f1,f2){mean(mc_replicate(1000,et(f1,f2,ash_density_int,h=h0),detectCores(),varlist = c('et','ash_density_int','histogram_density','vec')))},vectorize.args = ""h0"")"
"0",""
"0","#######################"
"0","## some useful expression to be used in MISE function"
"0","logis_exp=function(mu=0,sd=1){substitute((exp(-(x-mu)/sd))/(sd*(1+exp(-(x-mu)/sd))^2))}"
"0","laplace_exp=function(mu=0,sd=1){substitute((.5/sd)*exp(-abs((x-mu)/sd)))}"
"0","normal_exp=function(mu=0,sd=1){substitute((1/sqrt(2*pi*sd))*exp((-((x-mu)/sd)^2)/2))}"
"0","cauchy_exp=function(mu=0,sd=1){substitute(sd/(sd^2+(x-mu)^2))}"
"0","gamma_exp=function(r=1,theta=2){substitute((x^(r-1)*exp(-(x/theta)))/((gamma(r))*(theta^r)))}"
"0","beta_exp=function(a=1,b=1){substitute((x^(a-1))*(x^(b-1))/((gamma(a)*gamma(b))/gamma(a+b)))}"
"0","weib_exp=function(l=1,k=1){substitute((k/l)*(x/l)^(k-1)*exp(-(x/l)^k))}"
"0","pareto_exp=function(r=1,theta=1){substitute((r*(theta)^r)/x^(r+1))}"
"0",""
"0",""
"0","#######################"
"0","## getting pdf of two contaminated distribution"
"0","cont_dist_exp=function(dist1,dist2,p=.5)"
"0","{"
"0","  substitute(p*dist1+(1-p)*dist2,list(p=p,dist1=dist1,dist2=dist2))"
"0","}"
"0",""
"0",""
"0","######################"
"0","##random sample from unknown distribution"
"0","rcont_dist=function(n,dist1,dist2,p=.5)"
"0","{"
"0","  x=rbinom(n,1,p)"
"0","  r1=dist1(sum(x))"
"0","  r2=dist2(sum(1-x))"
"0","  c(r1,r2)"
"0","}"
"0",""
"0","##showing asymptotic normality of kernel density estimates"
"0","Asymp=function(u=0,n=c(10,30,70,150),expr=NULL,rs=rnorm,ker_f=dnorm,h0=NULL,...)"
"0","{"
"0","  exp_dens=ifelse(!is.null(expr),expr,expression(dnorm(x)))"
"0","  par(mfrow=c(2,2))"
"0","  for (i in n)"
"0","  {"
"0","    h1=ifelse(is.null(h0),MISE(n=i,expr=exp_dens,kern=ker_f,...)$h_opt,h0)"
"0","    a=function(){kern_density(u,rs(i),h=h1,func=ker_f)}"
"0","    z=replicate(1000,a())"
"0","    y=scale(z,scale = TRUE)"
"0","    hist(y,main=paste(""n = "",i),prob=TRUE,nclass=50)"
"0","    curve(dnorm,lwd=2,add=TRUE,col=""red"")"
"0","  }"
"0",""
"0","}"
"0",""
"0",""
"0","#####calculation of M_0(h)"
"0",""
"0","M_0=Vectorize(function(v,l1=-Inf,u1=Inf,h=0.1,kern=dnorm,...)"
"0","{"
"0","  cv_likelihood=Vectorize(function(i=1)"
"0","  {"
"0","    (sum(kern((v[i]-v)/h,...))-kern(0,...))/((length(v)-1)*h)"
"0","  })"
"0","  L=integrate(function(x){(kern_density(x,v,h,kern,...))^2},l1,u1,subdivisions = 5000)$value"
"0","  L-sum(cv_likelihood(seq_along(v)))*2/length(v)"
"0","},vectorize.args = ""h"")"
"0",""
"0",""
"0",""
"0",""
"0","###likelihood cross validation"
"0",""
"0","l_cv=Vectorize(function(v,h=0.1,kern=dnorm,...)"
"0","{"
"0","  CV=Vectorize(function(i=1)"
"0","  {"
"0","    (sum(kern((v[i]-v)/h,...))-kern(0,...))/((length(v)-1)*h)"
"0","  })"
"0","  cv_h=mean(log(CV(seq_along(v))))"
"0","  return(cv_h)"
"0","},vectorize.args = ""h"")"
"0",""
"0",""
"0","#########################"
"0",""
"0","## L1 loss calculation"
"0","et.l1 = function(func1 = rnorm,func2=dnorm,Func = beta_density,l1 = -Inf,u1 = Inf,...) "
"0","{ "
"0","  v = func1(1000)"
"0","  integrate(function(x){abs(Func(x,v,...)-func2(x))},lower = l1,upper = u1,subdivisions = 10000)$value"
"0","}"
"0",""
"0","vec=rnorm(1000)"
"0","vec.chisq = rchisq(1000,df = 5)"
"0","vec.cauchy = rcauchy(1000)"
"0","vec.mix1 = rcont_dist(1000,rnorm,rexp,0.7) "
"0","vec.logis = rlogis(1000)"
"0",""
"0","vec.t = rt(1000,df = 5)"
"0",""
"0","dir_name=""C:/Users/Dell/OneDrive/Desktop/npi_project/"""
"0","```"
"2","Error: attempt to use zero-length variable name
"
